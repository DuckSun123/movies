{"version":3,"sources":["Components/List/List.jsx","Containers/List/ListContainer.js","App.js","reportWebVitals.js","index.js"],"names":["MovieList","data","onClick","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","item","Item","title","id","content","ListContainer","useState","setData","settitle","isModalVisible","setIsModalVisible","movieInfoResult","movieDetail","setmovieDetail","useEffect","a","yesterday","moment","subtract","format","axios","get","boxOfficeResult","boxofficeType","list","dailyBoxOfficeList","map","x","rank","movieNm","movieCd","source","visible","footer","onOk","onCancel","movieInfo","movieNmEn","openDt","actors","cast","castEn","peopleNm","peopleNmEn","Header","Layout","Footer","Content","Sider","style","header","position","zIndex","width","margin","height","padding","overflowX","overflowY","bottom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.995faf8d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { List, Card } from 'antd';\r\n\r\nconst MovieList = ({ data, onClick }) => {\r\n    return (\r\n        <List grid={{\r\n                gutter: 16,\r\n                xs: 1,\r\n                sm: 2,\r\n                md: 4,\r\n                lg: 4,\r\n                xl: 6,\r\n                xxl: 3,\r\n            }}\r\n            dataSource={data}\r\n            renderItem={item => (\r\n                <List.Item>\r\n                    <Card title={item.title} onClick={() => onClick(item.id)}>{item.content}</Card>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default MovieList;\r\n","import axios from 'axios';\r\nimport moment from 'moment';\r\nimport { Modal } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport MovieList from '../../Components/List/List'\r\n\r\nconst GET_API = 'http://kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=f5eef3421c602c6cb7ea224104795888&targetDt=';\r\nconst SHOW_API = 'http://www.kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieInfo.json?key=f5eef3421c602c6cb7ea224104795888&movieCd=';\r\nconst ListContainer = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const [title, settitle] = useState('');\r\n\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [movieDetail, setmovieDetail] = useState({ movieInfoResult: false});\r\n\r\n    const showModal = (id) => {\r\n        (async() => {\r\n            const { data } = await axios.get(SHOW_API + id);\r\n            setmovieDetail(data);\r\n            setIsModalVisible(true);\r\n        })();\r\n    };\r\n  \r\n    const handleOk = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n  \r\n    const handleCancel = () => {\r\n      setIsModalVisible(false);\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        (async () => {\r\n            const yesterday = moment()\r\n                .subtract(1, 'days')\r\n                .format('YYYYMMDD');\r\n\r\n            const { data } = await axios\r\n                .get(GET_API + yesterday);\r\n\r\n            settitle(data.boxOfficeResult.boxofficeType);\r\n\r\n            const list = (data && data.boxOfficeResult.dailyBoxOfficeList.map(x => ({\r\n                title: x.rank,\r\n                content: x.movieNm,\r\n                id: x.movieCd\r\n            }))) || [];\r\n\r\n            setData(list);\r\n\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <p>\r\n                {title}\r\n            </p>\r\n\r\n            {movieDetail.movieInfoResult && (\r\n                <Modal title={movieDetail.movieInfoResult.source} visible={isModalVisible} footer={[]} onOk={handleOk} onCancel={handleCancel}>\r\n                    <h2>제목 :{movieDetail.movieInfoResult.movieInfo.movieNm}</h2>\r\n                    <h2>제목(en) :{movieDetail.movieInfoResult.movieInfo.movieNmEn}</h2>\r\n                    <h2>개봉일 :{movieDetail.movieInfoResult.movieInfo.openDt}</h2>\r\n                    <div>\r\n                    출연:\r\n                        <ul>\r\n                            {movieDetail.movieInfoResult.movieInfo.actors.map(item => (<li>\r\n                                <p>배역: {item.cast}</p>\r\n                                <p>배역(en): {item.castEn}</p>\r\n                                <p>이름: {item.peopleNm}</p>\r\n                                <p>이름(en): {item.peopleNmEn}</p>\r\n                            </li>))}\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                </Modal>\r\n            )}\r\n           \r\n\r\n            <MovieList data={data} onClick={showModal} />\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default ListContainer;\r\n","import './App.less';\nimport ListContainer from './Containers/List/ListContainer'\nimport { Layout } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\nconst style = {\n  header: { position: 'fixed', zIndex: 1, width: '100%' },\n  content: { margin: '64px 0', height: 'calc(100vh - (64px * 2))', padding: '12px', overflowX: 'hidden', overflowY: 'auto' },\n  footer: { position: 'fixed', zIndex: 1, bottom: '0', width: '100%' }\n}\nfunction App() {\n  return (\n    <Layout>\n      <Header style={style.header}>Header</Header>\n      <Content style={style.content}>\n        <ListContainer />\n      </Content>\n      <Footer style={style.footer}>Footer</Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}